
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    #include       /etc/nginx/mime.types;
    #default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"'
                      'Proxy: "$proxy_host" "$upstream_addr" $request';

    access_log  /var/log/nginx/access.log  main;

    #sendfile        on;
    ##tcp_nopush     on;

    #keepalive_timeout  65;

    ##gzip  on;

    #include /etc/nginx/conf.d/*.conf;

    server {
        resolver 127.0.0.11 valid=30s;

        # This use of the variable is convoluted but necessary because if we do a simple proxy_pass nginx will check
        # availability (dns I think) of the other end and refuse to start if it can find it. That means it will fail
        # everything if just one of the apis isn't starting. Or if this is starting faster than the apis.
        location /foo-api/ {
            set $fooapi http://foo-api:3000/;
            rewrite /foo-api/api/(.*) $1 break;
            proxy_pass $fooapi$uri$is_args$args;
        }

        location /swagger/ {
            set $swaggerui http://swaggerui:8080/;
            proxy_pass $swaggerui$uri$is_args$args;
        }
    }
}
